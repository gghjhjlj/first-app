import streamlit as st
import pandas as pd

st.set_page_config(page_title="수도권 신도시 분석", layout="wide")

st.title("🏙️ 대한민국 수도권 신도시 분석 웹앱")
st.write("기수별 신도시의 공급 규모, 개발 면적, 교통 여건 등 다양한 정보를 비교해보세요.")

# 신도시 데이터 정의
new_town_data = [
    {
        "신도시명": "분당신도시",
        "기수": "1기",
        "개발 규모(㎢)": 19.6,
        "주택 공급 호수": 98000,
        "교통망": "수서~분당선, 경부고속도로",
        "개발 연도": "1989년~1996년"
    },
    {
        "신도시명": "일산신도시",
        "기수": "1기",
        "개발 규모(㎢)": 15.7,
        "주택 공급 호수": 92000,
        "교통망": "경의중앙선, 자유로, 제2자유로",
        "개발 연도": "1989년~1996년"
    },
    {
        "신도시명": "판교신도시",
        "기수": "2기",
        "개발 규모(㎢)": 8.9,
        "주택 공급 호수": 29000,
        "교통망": "신분당선, 경강선",
        "개발 연도": "2003년~2010년"
    },
    {
        "신도시명": "위례신도시",
        "기수": "2기",
        "개발 규모(㎢)": 6.8,
        "주택 공급 호수": 42000,
        "교통망": "8호선, 위례신사선(예정)",
        "개발 연도": "2008년~2020년대"
    },
    {
        "신도시명": "동탄2신도시",
        "기수": "2기",
        "개발 규모(㎢)": 24.3,
        "주택 공급 호수": 119000,
        "교통망": "SRT, GTX-A(예정), 동탄 트램(예정)",
        "개발 연도": "2008년~2027년 예정"
    },
    {
        "신도시명": "김포한강신도시",
        "기수": "2기",
        "개발 규모(㎢)": 11.8,
        "주택 공급 호수": 50000,
        "교통망": "김포골드라인",
        "개발 연도": "2006년~2015년"
    },
    {
        "신도시명": "검단신도시",
        "기수": "2기",
        "개발 규모(㎢)": 11.2,
        "주택 공급 호수": 75000,
        "교통망": "인천 1호선 연장, GTX-D(예정)",
        "개발 연도": "2007년~2030년 예정"
    },
    {
        "신도시명": "고양창릉",
        "기수": "3기",
        "개발 규모(㎢)": 8.1,
        "주택 공급 호수": 38000,
        "교통망": "GTX-A 예정, 고양선(예정)",
        "개발 연도": "2020년대"
    },
    {
        "신도시명": "부천대장",
        "기수": "3기",
        "개발 규모(㎢)": 3.4,
        "주택 공급 호수": 20000,
        "교통망": "서부광역철도(예정)",
        "개발 연도": "2020년대"
    },
    {
        "신도시명": "남양주왕숙",
        "기수": "3기",
        "개발 규모(㎢)": 11.3,
        "주택 공급 호수": 66000,
        "교통망": "GTX-B 예정",
        "개발 연도": "2020년대"
    }
]

# DataFrame으로 변환
df = pd.DataFrame(new_town_data)

# 인트로 테이블
st.subheader("📊 전체 신도시 요약")
st.dataframe(df, use_container_width=True)

# 기수별 필터링
st.subheader("🔍 기수별 신도시 비교")
selected_gen = st.selectbox("기수를 선택하세요:", df["기수"].unique())

filtered_df = df[df["기수"] == selected_gen]

st.write(f"✅ **{selected_gen} 신도시 목록 및 세부 정보**")
st.dataframe(filtered_df, use_container_width=True)

# 신도시 상세 보기
st.subheader("🏗️ 신도시 개별 정보")
selected_city = st.selectbox("신도시를 선택하세요:", df["신도시명"].unique())

selected_info = df[df["신도시명"] == selected_city].iloc[0]

st.markdown(f"### 🏙️ {selected_info['신도시명']} ({selected_info['기수']})")
st.write(f"**개발 규모:** {selected_info['개발 규모(㎢)']} ㎢")
st.write(f"**주택 공급 호수:** {selected_info['주택 공급 호수']:,} 호")
st.write(f"**교통망:** {selected_info['교통망']}")
st.write(f"**개발 연도:** {selected_info['개발 연도']}")
